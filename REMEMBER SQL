DISTINCT:

DISTINCT is used to return unique values in the output. It filters out all duplicate values in the specified column(s).
______________________________________________________________________________________________________________________________

Where:
We can restrict our query results using the WHERE clause in order to obtain only the information we want.
______________________________________________________________________________________________________________________________

AS:

AS is a keyword in SQL that allows you to rename a column or table using an alias. 
Example: 
The new name can be anything you want as long as you put it inside of single quotes. Here we renamed the name column as Titles.
Knowing how SELECT works, suppose we have the code below:

SELECT name AS 'Titles'
FROM table;
______________________________________________________________________________________________________________________________


LIKE:

Like II
The percentage sign % is another wildcard character that can be used with LIKE.

This statement below filters the result set to only include movies with names that begin with the letter ‘A’:

SELECT * 
FROM table
WHERE name LIKE 'A%';
______________________________________________________________________________________________________________________________

And
Sometimes we want to combine multiple conditions in a WHERE clause to make the result set more specific and useful.

______________________________________________________________________________________________________________________________

Limit
Limit : We’ve been working with a fairly small table (fewer than 250 rows), but most SQL tables contain hundreds of thousands of records.
In those situations, it becomes important to cap the number of rows in the result.

For instance, imagine that we just want to see a few examples of records.

SELECT *
FROM table 
LIMIT 10;
______________________________________________________________________________________________________________________________

CASE

EXAMPLE from case

SELECT name,
 CASE
  WHEN review > 4.5 THEN 'Extraordinary'
  WHEN review > 4 THEN 'Excellent'
  WHEN review > 3 THEN 'Good'
  WHEN review > 2 THEN 'Fair'
  ELSE 'Poor'
 END AS 'Review'
FROM nomnom;
